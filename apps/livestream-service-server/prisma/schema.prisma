datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Stream {
  createdAt       DateTime         @default(now())
  description     String?
  id              String           @id @default(cuid())
  messages        Message[]
  peerConnections PeerConnection[]
  title           String?
  updatedAt       DateTime         @updatedAt
  user            User?            @relation(fields: [userId], references: [id])
  userId          String?
}

model PeerConnection {
  createdAt DateTime                  @default(now())
  id        String                    @id @default(cuid())
  status    EnumPeerConnectionStatus?
  stream    Stream?                   @relation(fields: [streamId], references: [id])
  streamId  String?
  updatedAt DateTime                  @updatedAt
}

model Message {
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  sentAt    DateTime?
  stream    Stream?   @relation(fields: [streamId], references: [id])
  streamId  String?
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  messages  Message[]
  password  String
  roles     Json
  streams   Stream[]
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

enum EnumPeerConnectionStatus {
  Option1
}
